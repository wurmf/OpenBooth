package org.openbooth;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

/**
 * This class uses a xml configuration file to provide dependency injection for testing purposes
 */
public class SpringTestEnvironment {

    private static ApplicationContext prototypedApplicationContext;

    /**
     * This method returns an application context which can be used to get a new instance
     * every time a component is requested, which is useful for isolating test cases
     * while still using dependency injection to write tests against interfaces
     * @return an application context generated by the testing_beans.xml configuration
     */
    protected ApplicationContext getPrototypedApplicationContext(){
        if(prototypedApplicationContext == null) {
            prototypedApplicationContext = new ClassPathXmlApplicationContext("testing_beans.xml");
        }
        return prototypedApplicationContext;
    }

}
